include "global.tbh"

Const BT_NAME="BLE_Device_1"

Const PAT_BT_DISABLED="-~"
Const PAT_BT_ENABLED="G-~"
Const PAT_BT_CONNECTED="G~"

dim bt_enabled as no_yes=NO
dim bt_connected as no_yes=NO

'====================================================================
dim tcp_sock as byte

sub on_sys_init()
	'DEAL WITH SETTINGS ---------------------------------------------
	settings_init()	
		
	'Set up Bluetooth -----------------------------------------------
	luis_start(BT_NAME)
end sub

sub on_bt_event(bt_event as enum pl_bt_events)
	luis_on_bt_event(bt_event)
end sub

sub on_bt_data_sent()
	luis_on_bt_data_sent()
end sub

sub on_bt_data_arrival()
	luis_on_bt_data_arrival()
end sub

sub callback_luis_bt_connected()
	bt_connected=YES
	pat.play(PAT_BT_CONNECTED,PL_PAT_CANINT)
end sub

sub callback_luis_bt_disconnected()
	bt_connected=NO
	pat.play(PAT_BT_ENABLED,PL_PAT_CANINT)
end sub

sub callback_luis_bt_enabled()
	bt_enabled=YES
	pat.play(PAT_BT_ENABLED,PL_PAT_CANINT)
end sub

sub callback_luis_bt_disabled()
	bt_enabled=NO
	bt_connected=NO
	pat.play(PAT_BT_DISABLED,PL_PAT_CANINT)
	luis_start(BT_NAME)
end sub

sub callback_luis_buzz_command()
	pat.play("-GRGRGRGR-**",PL_PAT_CANINT)
end sub

sub on_pat()
	if bt_connected=YES then
		pat.play(PAT_BT_CONNECTED,PL_PAT_CANINT)
	else
		if bt_enabled=YES then
			pat.play(PAT_BT_ENABLED,PL_PAT_CANINT)
		else	
			pat.play(PAT_BT_DISABLED,PL_PAT_CANINT)
		end if
	end if
end sub

sub settings_init()
	dim s as string
	if stg_start()<>EN_STG_STATUS_OK then
		sys.debugprint("There is some problem with settings\r\n")
		sys.halt
	end if
	if stg_check_all(s)<>EN_STG_STATUS_OK then
		sys.debugprint("Uups... some settings need to be initialized...\r\n")
		if stg_restore_multiple(EN_STG_INIT_MODE_OVERRIDE)=EN_STG_STATUS_OK then
			sys.debugprint("Settings initialized\r\n")
		else
			sys.debugprint("Setting init failed!\r\n")
			sys.halt
		end if
	end if
end sub

'other callbacks-------------------------------------
sub callback_stg_error(byref stg_name_or_num as string,index as byte,status as en_stg_status_codes)
end sub
sub callback_stg_pre_get(byref stg_name_or_num as string,index as byte,byref stg_value as string)
end sub
sub callback_stg_post_set(byref stg_name_or_num as string, index as byte,byref stg_value as string)
end sub